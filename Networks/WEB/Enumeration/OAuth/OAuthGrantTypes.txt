Authorization Code Grant
The Authorization Code grant is the most commonly used OAuth 2.0 flow suited for server-side applications (PHP, JAVA, .NET etc). 
In this flow, the client redirects the user to the authorization server, where the user authenticates and grants authorization.
The authorization server then redirects the user to the client with an authorization code. 
The client exchanges the authorization code for an access token by requesting the authorization server's token endpoint. 

Implicit Grant
The Implicit grant is primarily designed for mobile and web applications where clients cannot securely store secrets. 
It directly issues the access token to the client without requiring an authorization code exchange.
In this flow, the client redirects the user to the authorization server. 
After the user authenticates and grants authorization, the authorization server returns an access token in the URL fragment.
This grant type is simplified and suitable for clients who cannot securely store client secrets. It is faster as it involves fewer steps than the authorization code grant. However, it is less secure as the access token is exposed to the user agent and can be logged in the browser history. It also does not support refresh tokens. 

Resource Owner Password Credentials Grant
The Resource Owner Password Credentials grant is used when the client is highly trusted by the resource owner, such as first-party applications.
The client collects the userâ€™s credentials (username and password) directly and exchanges them for an access token

Client Credentials Grant
The Client Credentials grant is used for server-to-server interactions without user involvement.
The client uses his credentials to authenticate with the authorization server and obtain an access token.
In this flow, the client authenticates with the authorization server using its client credentials (client ID and secret), and the authorization server issues an access token directly to the client


