Cookie-Based Session Management

Cookie-based session management is often called the old-school way of managing sessions. Once the web application wants to begin tracking, in a response, the Set-Cookie header value will be sent.
Your browser will interpret this header to store a new cookie value. Let's take a look at such a Set-Cookie header:
Set-Cookie: session=12345;
Your browser will create a cookie entry for a cookie named session with a value of 12345 which will be valid for the domain where the cookie was received from.
Several attributes can also be added to this header. If you want to learn more about all of them, please refer to the link below, but some of the noteworthy ones are:
https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie

Secure - Indicates to the browser that the cookie may only be transmitted over verified HTTPS channels. If there are certificate errors or HTTP is used, the cookie value will not be transmitted.
HTTPOnly - Indicates to the browser that the cookie value may not be read by client-side JavaScript.
Expire - Indicates to the browser when a cookie value will no longer be valid and should be removed.
SameSite - Indicates to the browser whether the cookie may be transmitted in cross-site requests to help protect against CSRF attacks.

Token-Based Session Management

Token-based session management is a relatively new concept.
Instead of using the browser's automatic cookie management features, it relies on client-side code for the process.
After authentication, the web application provides a token within the request body. 
Using client-side JavaScript code, this token is then stored in the browser's LocalStorage.

When a new request is made, JavaScript code must load the token from storage and attach it as a header.
One of the most common types of tokens is JSON Web Tokens (JWT), which are passed through the Authorization: Bearer header. 
However, as we are not using the browser's built-in cookie management features, it is a bit of the wild west where anything goes.
Although there are standards, nothing is really forcing anything from sticking to these standards.
